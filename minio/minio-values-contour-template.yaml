#@ load("@ytt:data", "data")
---
## minio mode, i.e. standalone or distributed or gateway (nas)
## Distributed MinIO ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
## NAS Gateway MinIO ref: https://docs.min.io/docs/minio-gateway-for-nas.html
mode: standalone

## Set default rootUser, rootPassword
## AccessKey and secretKey is generated when not set
## Distributed MinIO ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
##
rootUser: #@ data.values.minio["root-user"]
rootPassword: #@ data.values.minio["root-password"]

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## minio data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  ## Storage class of PV to bind. By default it looks for standard storage class.
  ## If the PV uses a different storage class, specify that here.
  storageClass: #@ data.values.minio["storage-class"]
  size: 200Gi

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##

ingress:
  enabled: true
  ingressClassName: contour
  annotations: 
    cert-manager.io/cluster-issuer: "letsencrypt-contour-cluster-issuer"
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
  - #@ data.values.minio.fqdn
  tls:
  - secretName: minio-cert
    hosts:
    - #@ data.values.minio.fqdn

consoleIngress:
  enabled: true
  ingressClassName: contour
  annotations: 
    cert-manager.io/cluster-issuer: "letsencrypt-contour-cluster-issuer"
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
  - #@ data.values.minio["console-fqdn"]
  tls:
  - secretName: minio-console-cert
    hosts:
    - #@ data.values.minio["console-fqdn"]

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests: 
    memory: 512Mi

## List of users to be created after minio install
##
users:
  ## Username, password and policy to be assigned to the user
  ## Default policies are [readonly|readwrite|writeonly|consoleAdmin|diagnostics]
  ## Add new policies as explained here https://docs.min.io/docs/minio-multi-user-quickstart-guide.html
  ## NOTE: this will fail if LDAP is enabled in your MinIO deployment
  ## make sure to disable this if you are using LDAP.
  - accessKey: #@ data.values.harbor["blob-storage"]["access-key-id"]
    secretKey: #@ data.values.harbor["blob-storage"]["secret-access-key"]
    policy: readwrite 

## List of buckets to be created after minio install
##
buckets:
- name: #@ data.values.harbor["blob-storage"]["bucket"]
  policy: none
  versioning: true
